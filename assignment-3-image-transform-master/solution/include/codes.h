#pragma once

#include <errno.h>

#define SUCCESS 0

typedef enum {
    WRONG_ARGS_COUNT = EINVAL,
} ARGS_CODE;

typedef enum {
    FILE_OPEN_CORRECT = SUCCESS,
    FILE_OPEN_ERROR = ENOENT,
    FILE_INVALID_ARGUMENT,
    FILE_CLOSE_CORRECT,
} FILE_CODE;

typedef enum {
    READ_CORRECT = SUCCESS,
    READ_INVALID_HEADER = EBADF,
    READ_MEMORY_LIMIT_EXCEED = ENOMEM,
    READ_IO_ERROR = EIO,
    READ_INVALID_ARGUMENT = EINVAL,
} IN_BMP_CODE;

typedef enum {
    WRITE_CORRECT = SUCCESS,
    WRITE_IO_ERROR = EIO,
    WRITE_INVALID_ARGUMENT = EINVAL,
    WRITE_MEMORY_ERROR = ENOMEM,
} OUT_BMP_CODE;

typedef enum {
    TRANSFORM_CORRECT = SUCCESS,
    TRANSFORM_COMMAND_NOT_EXISTS = EINVAL,
    TRANSFORM_MEMORY_LIMIT_EXCEED = ENOMEM,
} TRANSFORMATION_CODE;

typedef enum {
    TRANSFORM_NONE,
    TRANSFORM_CW90,
    TRANSFORM_CCW90,
    TRANSFORM_FLIPH,
    TRANSFORM_FLIPV,
    TRANSFORM_UNKNOWN,
} TRANSFORM_TYPE;
